name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Python code
        run: |
          flake8 .
      
      - name: Install hadolint
        run: |
          wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.8.0/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint

      - name: Lint Dockerfile
        run: |
          hadolint dockerfile
      
      - name: Build Docker image
        run: |
          docker build --no-cache -t youssefmahdy/hivebox-app:v0.0.1 .
        
      
      
        

      # - name: Set up OpenSSF ScoreCard
      #   uses: openssf/scorecard-action@v1
      #   id: scorecard
      #   with:
      #     results_file: results.sarif
    
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests with coverage
        run: |
          python -m pytest --cov=. --cov-report=xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
    
  quality:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
        # with:
        #   args: >
        #     -Dsonar.projectKey=youssefadelG_HiveBox
        #     -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}
        #     -Dsonar.host.url=https://sonarcloud.io
      # - name: SonarQube Quality Gate Check
      #   uses: SonarSource/sonarcloud-quality-gate-action@v1.0.0
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  
  terrascan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install Terrascan
        run: |
          curl -L https://github.com/tenable/terrascan/releases/latest/download/terrascan_1.19.9_Linux_x86_64.tar.gz | tar xz
          sudo mv terrascan /usr/local/bin/

      - name: Initialize Terrascan policies
        run: terrascan init

      - name: Run Terrascan on Kubernetes manifests
        run: terrascan scan -d ./KIND -i k8s --repo-url https://github.com/youssefadelG/HiveBox.git --repo-ref ${{ github.ref_name }} -o json | tee terrascan-result.json
        continue-on-error: true
      
      - name: Fail if HIGH violations found
        run: |
          if jq '.results.violations[] | select(.severity == "HIGH")' terrascan-result.json | grep .; then
            echo "High severity violations found!"
            exit 1
          else
            echo "No high severity violations."
          fi

      